services:
  wolns_api:
    build: .
    container_name: wolns-api
    env_file:
      - .env
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    container_name: wolns-postgres
    image: postgres:17
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 10s
      retries: 20
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - wolns-postgres-data:/var/lib/postgresql/data
    restart: always

  redis:
    container_name: wolns-redis
    image: redis:7
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: always

  celery_worker:
    build: .
    container_name: wolns-celery-worker
    profiles:
      - celery
    command: poetry run celery -A src.core.celery worker --loglevel=info --concurrency=5
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
    restart: always

  celery_beat:
    build: .
    container_name: wolns-celery-beat
    profiles:
      - celery
    command: poetry run celery -A src.core.celery beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
    restart: always

  nginx:
    image: nginx:latest
    container_name: wolns-nginx
    profiles:
      - prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/ssl-data:/data/letsencrypt
    depends_on:
      - wolns_api
    restart: always

  certbot:
    image: certbot/certbot
    container_name: wolns-certbot
    profiles:
      - prod
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/ssl-data:/data/letsencrypt
    depends_on:
      - nginx
    entrypoint: >
      /bin/sh -c "
      if [ ! -d /etc/letsencrypt/live/wolns.fadegor05.ru ]; then
        certbot certonly --webroot --webroot-path=/data/letsencrypt -d wolns.fadegor05.ru --agree-tos --register-unsafely-without-email;
        nginx -s reload;
      fi;
      trap exit TERM;
      while :; do sleep 6h & wait $${!}; certbot renew; done"
    restart: always

volumes:
  wolns-postgres-data: